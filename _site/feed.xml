<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/PersonalPortfolioWebsite/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/PersonalPortfolioWebsite/" rel="alternate" type="text/html" /><updated>2023-10-24T22:36:10-07:00</updated><id>http://localhost:4000/PersonalPortfolioWebsite/feed.xml</id><title type="html">codebyfrank</title><subtitle>this is a website to show off different personal projects and to keep the creativity flowing</subtitle><entry><title type="html">seeing the pros and cons of two approaches - recursion and iteration</title><link href="http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/23/recursion-versus-iteration.html" rel="alternate" type="text/html" title="seeing the pros and cons of two approaches - recursion and iteration" /><published>2023-10-23T00:00:00-07:00</published><updated>2023-10-23T00:00:00-07:00</updated><id>http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/23/recursion-versus-iteration</id><content type="html" xml:base="http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/23/recursion-versus-iteration.html"><![CDATA[<p>The first time i compared two different approaches in problem solving within the domain of computer science, it was looking at the fibonacci sequence and making a program which would generate a sequence of numbers that fulfill a set of conditions.  Here are the conditions:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. The first number is 1
2. The current number is the sum of the previous two numbers
3. All numbers are integers
</code></pre></div></div>

<p>The idea behind the exercise was to demonstrate the differences in performance between different approaches to solving a particular problem.  For the Fibonacci sequence, it turns out that iteration was able to return sequences far beyond the limit of the program which used recursion.  However, I want to explore the different trade-offs between recursion and iteration.  With recursion, it is usually assumed to be a more elegant approach to problem solving compared to iteration.  When maintaining one’s own stack, readability becomes key in the long term.  However, there are downsides to using recursion such as a larger amount of memory possibly being used or a less intuitive approach to solving the problem.  At the foundation of this is the difference between a top-down and bottom-up approach in designing algorithms.</p>

<h3 id="fibonacci-sequence">fibonacci sequence</h3>

<h3 id="coin-change-problem">coin change problem</h3>

<h3 id="merge-sort-implementation">merge sort implementation</h3>

<h3 id="walkingtraversing-trees">walking/traversing trees</h3>]]></content><author><name></name></author><category term="datastructures" /><category term="data structures and algorithms" /><summary type="html"><![CDATA[The first time i compared two different approaches in problem solving within the domain of computer science, it was looking at the fibonacci sequence and making a program which would generate a sequence of numbers that fulfill a set of conditions. Here are the conditions:]]></summary></entry><entry><title type="html">building then using a singly-linked list</title><link href="http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/08/linked-list.html" rel="alternate" type="text/html" title="building then using a singly-linked list" /><published>2023-10-08T00:00:00-07:00</published><updated>2023-10-08T00:00:00-07:00</updated><id>http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/08/linked-list</id><content type="html" xml:base="http://localhost:4000/PersonalPortfolioWebsite/datastructures/data%20structures%20and%20algorithms/2023/10/08/linked-list.html"><![CDATA[<p>One of the first problems that I encountered in my introduction to computer programming class was trying to add another element to an array which was already full.  This caused the compiler to print an error message.  At the time, I worked around the issue by replacing the full array with an array which was double the size and move all the elements over from the smaller, old array to the larger array.  However, my professor mentioned that after a while, the array will become too large and copying the elements would be much slower than adding the elements to something that wasn’t fixed in size.  This is when they introduced the data structure, the singly-linked list.  So today, I was thinking of building a singly-linked list and using the list to build travel iterneraries.  Hopefully, by the end of this, singly-linked lists will be a lot more easier to navigate.</p>

<h3 id="singly-linked-list-background">singly-linked list background</h3>

<h3 id="plan-of-execution-travel-itinerary">plan of execution: travel itinerary</h3>]]></content><author><name></name></author><category term="datastructures" /><category term="data structures and algorithms" /><summary type="html"><![CDATA[One of the first problems that I encountered in my introduction to computer programming class was trying to add another element to an array which was already full. This caused the compiler to print an error message. At the time, I worked around the issue by replacing the full array with an array which was double the size and move all the elements over from the smaller, old array to the larger array. However, my professor mentioned that after a while, the array will become too large and copying the elements would be much slower than adding the elements to something that wasn’t fixed in size. This is when they introduced the data structure, the singly-linked list. So today, I was thinking of building a singly-linked list and using the list to build travel iterneraries. Hopefully, by the end of this, singly-linked lists will be a lot more easier to navigate.]]></summary></entry><entry><title type="html">welcome to codebyfrank!</title><link href="http://localhost:4000/PersonalPortfolioWebsite/miscellaneous/2023/10/05/introductory-post.html" rel="alternate" type="text/html" title="welcome to codebyfrank!" /><published>2023-10-05T00:00:00-07:00</published><updated>2023-10-05T00:00:00-07:00</updated><id>http://localhost:4000/PersonalPortfolioWebsite/miscellaneous/2023/10/05/introductory-post</id><content type="html" xml:base="http://localhost:4000/PersonalPortfolioWebsite/miscellaneous/2023/10/05/introductory-post.html"><![CDATA[<p>Hello! Welcome to codebyfrank, where I plan on sharing different experiences and personal projects I take on.  I hope that I can inspire others to go out and build something amazing by showcasing my personal projects and showing my journey through the learning process.  Software development is one of those skills that normally has a steep learning curve.  By posting and sharing some of the problems and struggles that I encounter, I hope that it would inspire you to either come up with a better solution or that I piqued your interest in the area of software development.</p>

<p>I am interested in a vast array of different subjects within the space of software development and it is my goal to use this as an opportunity to explore various topics such as:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- data structures and algorithms
- data science
- code deployment and automation (DevOps)
- development on linux/unix systems
- mathematics
- full stack web development
</code></pre></div></div>

<p>among others.  Hopefully this site does inspire somebody to take up development!</p>]]></content><author><name></name></author><category term="miscellaneous" /><summary type="html"><![CDATA[Hello! Welcome to codebyfrank, where I plan on sharing different experiences and personal projects I take on. I hope that I can inspire others to go out and build something amazing by showcasing my personal projects and showing my journey through the learning process. Software development is one of those skills that normally has a steep learning curve. By posting and sharing some of the problems and struggles that I encounter, I hope that it would inspire you to either come up with a better solution or that I piqued your interest in the area of software development.]]></summary></entry></feed>